from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from data.callback_data import agree_cd
from loader import dp


@dp.callback_query_handler(text="rules")
async def get_my_devices(call: CallbackQuery):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–µ–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", callback_data=agree_cd.new(num=1))],
        [InlineKeyboardButton("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", callback_data=agree_cd.new(num=2))],
        [InlineKeyboardButton("–û–ø–ª–∞—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç", callback_data=agree_cd.new(num=3))],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")],
    ])

    try:
        await call.message.edit_text("üìã –û—Ñ–µ—Ä—Ç–∞", reply_markup=markup)
    except:
        await call.message.answer("üìã –û—Ñ–µ—Ä—Ç–∞", reply_markup=markup)
        try:
            await call.message.delete()
        except:
            pass


@dp.callback_query_handler(agree_cd.filter())
async def get_agree_document(call: CallbackQuery, callback_data: dict):
    num = int(callback_data["num"])

    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="rules")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
    ])

    if num == 1:
        document = "BQACAgIAAxkBAAED3XJkAjfL2heDLKpANkO66zTifcApfAACHyQAAubtGUjNC_J4hcfeXS4E"
    elif num == 2:
        document = "BQACAgIAAxkBAAEDgDNj_5gYd7zlTWMfDJws60JDyZJXHwACUCgAAnt-qEs9LHEnZciuMy4E"
    else:
        document = "BQACAgIAAxkBAAEDgDlj_5hQmdsAATmL4qsH1Ni75LEBAWIAAk8wAAKWbfhLDWjiA9CYRq4uBA"

    await call.message.answer(document, reply_markup=markup)
    await call.message.delete()

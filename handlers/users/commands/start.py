import asyncio
from random import randint

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.utils.exceptions import BotBlocked

from keyboards.inline.inline import create_tariffs_markup, menuMarkup
from loader import dp, db, bot


@dp.message_handler(CommandStart(), state="*")
async def bot_start(message: types.Message, state: FSMContext):
    await state.finish()

    user_id = message.chat.id
    username = message.chat.username
    first_name = message.chat.first_name
    full_name = message.chat.first_name

    user = await db.get_user(user_id)

    if user:
        text = f"""üëã <b>–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {first_name}!</b>

üë§ <b>–í–∞—à ID:</b> <code>{user_id}</code>"""

        if user[0]["vpn_id"]:
            term = user[0]["term"]
            text += f"\n‚è≥ <b>–î–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:</b> <code>{term}</code>\n\n<i>‚ùóÔ∏è –ï—Å–ª–∏ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ QR –∫–æ–¥ –∏–ª–∏ " \
                    f"–∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª - –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Ö —Å–∫–∞—á–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–∏ –∫–ª—é—á–∏'.</i>"
        else:
            text += "\n\nü•∫ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–ª—é—á–µ–π" \
                    "\n<i>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Ç–∞—Ä–∏—Ñ –≤ —Ä–∞–∑–¥–µ–ª–µ '–¢–∞—Ä–∏—Ñ—ã'</i>"

        markup = menuMarkup
    else:
        await db.add_new_user(user_id, username, full_name)

        start_command = message.text
        referer_id = start_command[7:]

        if referer_id:
            if referer_id != message.from_user.id:
                await db.update_user_info(user_id, {"referal": referer_id})

                try:
                    referer_user = await db.get_user(referer_id)
                    await db.update_user_info(referer_id, {"ref_count": referer_user[0]["ref_count"] + 1})

                    markup = InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton("‚úÖ –•–æ—Ä–æ—à–æ", callback_data="ok")]
                    ])
                    await bot.send_message(referer_id, "–ü–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!",
                                           reply_markup=markup)
                except BotBlocked:
                    pass

        text = f"""üëã <b>–ü—Ä–∏–≤–µ—Ç, {first_name}!</b>

üöÄ –≤—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
üíÉüèø –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–∞–π—Ç–∞–º
üí≥ –æ–ø–ª–∞—Ç–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ üá∑üá∫ –∫–∞—Ä—Ç–∞–º–∏ 
üí∞ —Å–∞–º–∞—è –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞ –Ω–∞ —Ä—ã–Ω–∫–µ!

‚¨áÔ∏è ‚¨áÔ∏è ‚¨áÔ∏è  <i>–ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É!</i>  ‚¨áÔ∏è ‚¨áÔ∏è ‚¨áÔ∏è"""

        markup = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("üíé –ü–æ–¥–∫–ª—é—á–∏—Ç—å VPN üíé", callback_data="start_connect")]
        ])

    await message.answer(text, reply_markup=markup)

    async with state.proxy() as data:
        if "msg" in data.keys():
            msg = data["msg"]
            for m in msg:
                try:
                    await bot.delete_message(user_id, m)
                except:
                    pass
            data.pop("msg")


@dp.callback_query_handler(text="start_connect")
async def select_device(call: CallbackQuery):
    text = """<b>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç <u>IronVPN</u> 

‚¨áÔ∏è –í–´–ë–ï–†–ò–¢–ï –¢–ê–†–ò–§ ‚¨áÔ∏è</b>.
    
Lite VPN - —ç—Ç–æ –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π, –Ω–æ –º–æ—â–Ω—ã–π VPN, –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –æ–ø–ª–∞—á–∏–≤–∞—Ç—å 4‚ÇΩ –≤ –¥–µ–Ω—å.

–¥–∞–ª–µ–µ –∏–¥–µ—Ç —É–∂–µ IRON VPN, –æ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ –≥–æ–≤–æ—Ä—è—Ç, —ç—Ç–æ Premium –∫–ª—é—á–∏:
 
–ó–ù–ê–ß–û–ö "üá∑üá∫" - –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä —Å –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º * —Å–æ—Ü.—Å–µ—Ç—è–º
—ç—Ç–æ –ª—É—á—à–∏–µ –∫–ª—é—á–∏ –Ω–∞ —Ä—ã–Ω–∫–µ üòå
"""

    markup = await create_tariffs_markup(call.message.chat.id)

    await call.message.edit_text(text, reply_markup=markup)
